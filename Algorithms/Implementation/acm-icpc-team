#https://www.hackerrank.com/challenges/acm-icpc-team
/* You are given a list of  people who are attending ACM-ICPC World Finals. Each of them are either well versed in a topic or
they are not. Find out the maximum number of topics a 2-person team can know. And also find out how many teams 
can know that maximum number of topics.

Note Suppose a, b, and c are three different people, then (a,b) and (b,c) are counted as two different teams.

Input Format

The first line contains two integers,  and , separated by a single space, where  represents the number of people, and  
represents the number of topics.  lines follow.
Each line contains a binary string of length . If the th line's th character is , then the th person knows the th topic; otherwise, he doesn't know the topic.

Constraints 
 

Output Format

On the first line, print the maximum number of topics a 2-person team can know. 
On the second line, print the number of 2-person teams that can know the maximum number of topics.
*/
import sys


n,m = raw_input().strip().split(' ')
n,m = [int(n),int(m)]
topic = []
topic_i = 0
maxTopics = 0
for topic_i in xrange(n):
   topic_t = str(raw_input().strip())
   topic.append(topic_t)

for topic_i in topic:
    num1 = int(topic_i,2)
    for topic_j in topic:
        num2 = int(topic_j,2)
        binOr = bin(num1 | num2)
        tempTopic = binOr.count('1')   
        if tempTopic > maxTopics :
            maxTopics = tempTopic
            
print maxTopics
#maxTeams = set()
maxTeams =[]

for topic_i in topic:
    num1 = int(topic_i,2)
    for topic_j in topic:
        num2 = int(topic_j,2)
        binOr = bin(num1 | num2)
        tempTopic = binOr.count('1')  
        if tempTopic == maxTopics :
            team =[ topic_i,topic_j]
            team.sort()
            if team  not in maxTeams:
                maxTeams.append(team)
           #maxTeams.add(team)
            
print len(maxTeams)
